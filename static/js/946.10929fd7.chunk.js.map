{"version":3,"file":"static/js/946.10929fd7.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/DetailedMovie/DetailedMovie.module.css?bf66","components/DetailedMovie/AditionalInfo.jsx","components/DetailedMovie/DetailedMovieCard.jsx","components/DetailedMovie/DetailedMovie.jsx","pages/MovieDetails.jsx","services/movieApi.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cardContainer\":\"DetailedMovie_cardContainer__V+Hrx\",\"goBackBtn\":\"DetailedMovie_goBackBtn__BmrjU\",\"card\":\"DetailedMovie_card__nUq85\",\"cardInfo\":\"DetailedMovie_cardInfo__WOSGy\",\"movieTitle\":\"DetailedMovie_movieTitle__ZLXfg\",\"score\":\"DetailedMovie_score__HFRUJ\",\"overviewTitle\":\"DetailedMovie_overviewTitle__+nu8H\",\"genresTitle\":\"DetailedMovie_genresTitle__QuYIx\",\"genresText\":\"DetailedMovie_genresText__0rAwG\",\"addInfo\":\"DetailedMovie_addInfo__WSDVP\",\"addTitle\":\"DetailedMovie_addTitle__P-yJZ\",\"addList\":\"DetailedMovie_addList__NxFOd\",\"addLink\":\"DetailedMovie_addLink__jSMiJ\"};","import { NavLink } from 'react-router-dom';\nimport css from './DetailedMovie.module.css'\n\nexport const AditionalInfo = () => {\n  return (\n    <div className={css.addInfo}>\n    <h2 className={css.addTitle}>Aditional information</h2>\n    <ul className={css.addList}>\n        <li><NavLink to='cast' className={css.addLink}>Cast</NavLink></li>\n        <li><NavLink to='reviews' className={css.addLink}>Reviews</NavLink></li>\n    </ul>\n  </div>\n  )\n};\n","import defaultimage from '../../img/defaultposter.png';\nimport css from './DetailedMovie.module.css';\n// import PropTypes from 'prop-types';\n\nexport const DetailedMovieCard = ({ movie }) => {\n  return (\n    <div className={css.card}>\n      <img\n        src={\n          !movie.poster_path\n            ? defaultimage\n            : `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n        }\n        alt={movie.original_title}\n        width=\"250\"\n        className={css.cardImage}\n      />\n      <div className={css.cardInfo}>\n        <h1 className={css.movieTitle}>\n          {movie.title}{' '}\n          {movie.release_date && (\n            <span>({movie.release_date.substring(0, 4)})</span>\n          )}\n        </h1>\n        <p className={css.score}>\n          User score: {Math.round(movie.vote_average * 10)}%\n        </p>\n        <h2 className={css.overviewTitle}>Overview</h2>\n        <p className={css.overviewText}>{movie.overview}</p>\n        <h2 className={css.genresTitle}>Genres</h2>\n        <p className={css.genresText}>\n          {movie.genres?.length > 0\n            ? movie.genres.map(genre => genre.name).join(', ')\n            : 'There is no information about genres'}\n        </p>\n      </div>\n    </div>\n  );\n};\n\n// DetailedMovieCard.propTypes = {\n//   movie: PropTypes.shape(\n//     {\n//       poster_path: PropTypes.string,\n//       title: PropTypes.string,\n//       release_date: PropTypes.string,\n//       vote_average: PropTypes.number,\n//       overview: PropTypes.string,\n//       genres: PropTypes.arrayOf({ name: PropTypes.string }),\n//     }),\n// };\n","import { useState, useEffect, useRef } from 'react';\nimport { useParams, useLocation, Link } from 'react-router-dom';\n// import defaultimage from '../../img/defaultposter.png'\nimport { getMovieDetails } from 'services/movieApi';\nimport { DetailedMovieCard } from './DetailedMovieCard';\nimport css from './DetailedMovie.module.css'\n\nexport const DetailedMovie = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState({});\n\n  const location = useLocation();\n  const goBack = useRef(location.state?.from ?? '/')\n\n  useEffect(() => {\n    try {\n        getMovieDetails(movieId).then(resp => setMovieDetails(resp));\n    } catch (error) {\n        console.log(error)\n    }\n  }, [movieId]);\n\n  return (\n    <div className={css.cardContainer}>\n        <Link to={goBack.current}>\n            <button type='button' className={css.goBackBtn}>Go back</button>\n        </Link>\n        <DetailedMovieCard movie={movieDetails}/>\n    </div>\n  )\n};\n","import { Loader } from './Loader';\nimport { Suspense } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { AditionalInfo } from 'components/DetailedMovie/AditionalInfo';\nimport { DetailedMovie } from 'components/DetailedMovie/DetailedMovie';\n\nconst MovieDetails = () => {\n  return (\n    <>\n      <DetailedMovie />\n      <AditionalInfo />\n    <Suspense fallback={<Loader/>}>\n        <Outlet/>\n    </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\nconst API_KEY = `?api_key=158ad78a017acca92c1d8a0f66634ca7`;\n\nexport const getTrending = async () => {\n  const response = await axios.get(`/trending/movie/day${API_KEY}`);\n  return response.data.results.map(({ id, title }) => {\n    return {\n      id,\n      title,\n    };\n  });\n};\n\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    `/search/movie${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data.results.map(({id, title}) => {\n    return {\n      id,\n      title,\n    }\n  });\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n"],"names":["AditionalInfo","className","css","to","DetailedMovieCard","movie","src","poster_path","defaultimage","alt","original_title","width","title","release_date","substring","Math","round","vote_average","overview","genres","length","map","genre","name","join","DetailedMovie","movieId","useParams","useState","movieDetails","setMovieDetails","location","useLocation","goBack","useRef","state","from","useEffect","getMovieDetails","then","resp","error","console","log","current","type","Suspense","fallback","Loader","axios","API_KEY","getTrending","response","data","results","id","searchMovies","query","getMovieCredits","getMovieReviews"],"sourceRoot":""}