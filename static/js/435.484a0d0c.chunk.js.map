{"version":3,"file":"static/js/435.484a0d0c.chunk.js","mappings":"2LACA,GAAgB,KAAO,yBAAyB,SAAW,8B,SCG9CA,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,eAAIC,UAAWC,EAAAA,KAAf,SACGJ,EAAOK,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,eAAaJ,UAAWC,EAAAA,SAAxB,UACE,SAAC,KAAD,CAAMI,GAAE,kBAAaF,GAAMG,MAAO,CAACC,KAAMT,GAAWE,UAAWC,EAAAA,SAA/D,SAA8EG,KADvED,EADC,KAOjB,C,4HCdD,GAAgB,MAAQ,yBAAyB,UAAY,6BAA6B,UAAY,8B,SCIzFK,EAAY,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAC1B,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KA2BA,OACE,kBAAMC,SArBiB,SAAAC,GACvBA,EAAIC,iBACsB,KAAtBJ,EAAWK,QAcfP,EAAcE,GACdC,EAAc,KAdZK,EAAAA,GAAAA,MAAY,0BAA2B,CACrCC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,WAOZ,EAGmC1B,UAAWC,EAAAA,KAA7C,WACE,kBACE0B,KAAK,OACLC,YAAY,eACZC,MAAOlB,EACPmB,WAAS,EACTC,SAhCe,SAAAjB,GACnB,IAAQe,EAAUf,EAAIkB,cAAdH,MACRjB,EAAciB,EACf,EA8BKI,aAAa,MACbjC,UAAWC,EAAAA,SAEb,mBAAQ0B,KAAK,SAAS3B,UAAWC,EAAAA,UAAjC,sBAIL,EC7CYiC,EAAY,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAC3B,OAAQ,eAAGnC,UAAWC,EAAAA,UAAd,uDAAwEkC,EAAxE,MACP,ECGYC,EAAa,WAAO,IAAD,EAC9B,GAA4B1B,EAAAA,EAAAA,UAAS,IAArC,eAAOb,EAAP,KAAewC,EAAf,KACA,GAAsCC,EAAAA,EAAAA,MAAtC,eAAOC,EAAP,KAAoBC,EAApB,KACMC,EAAK,UAAGF,EAAYG,IAAI,gBAAnB,QAA+B,GAkB1C,OAXAC,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAGL,KACEG,EAAAA,EAAAA,IAAaH,GAAOI,MAAK,SAAAC,GAAI,OAAIT,EAAUS,EAAd,GAG9B,CAFC,MAAOC,GACPC,QAAQC,IAAIF,EACb,CACF,GAAE,CAACN,KAGF,iBAAKS,MAAO,CAAChC,SAAU,YAAvB,WACE,SAACV,EAAD,CAAWC,cAjBM,SAAA0C,GACnBX,EAAgC,KAAjBW,EAAsB,CAAEV,MAAOU,GAAiB,CAAC,EACjE,IAgBsB,IAAlBtD,EAAOuD,SAAgB,SAACxD,EAAA,EAAD,CAAYC,OAAQA,IACzB,IAAlBA,EAAOuD,QAA0B,KAAVX,IAAgB,SAACP,EAAD,CAAWC,OAAQM,MAGhE,EC9BD,EAJe,WACb,OAAO,SAACL,EAAD,GACR,C,+LCFDiB,EAAAA,EAAAA,SAAAA,QAAA,+BACA,IAAMC,EAAO,4CAEAC,EAAW,mCAAG,oGACFF,EAAAA,EAAAA,IAAA,6BAAgCC,IAD9B,cACnBE,EADmB,yBAElBA,EAASC,KAAKC,QAAQxD,KAAI,YAC/B,MAAO,CACLC,GAFgD,EAAhBA,GAGhCC,MAHgD,EAAZA,MAKvC,KAPwB,2CAAH,qDAUXwC,EAAY,mCAAG,WAAMH,GAAN,uFACHY,EAAAA,EAAAA,IAAA,uBACLC,EADK,iCAC2Bb,EAD3B,gCADG,cACpBe,EADoB,yBAInBA,EAASC,KAAKC,QAAQxD,KAAI,YAC/B,MAAO,CACLC,GAF8C,EAAfA,GAG/BC,MAH8C,EAAXA,MAKtC,KATyB,2CAAH,sDAYZuD,EAAe,mCAAG,WAAMC,GAAN,uFACNP,EAAAA,EAAAA,IAAA,iBACXO,GADW,OACDN,EADC,oBADM,cACvBE,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfI,EAAe,mCAAG,WAAMD,GAAN,uFACNP,EAAAA,EAAAA,IAAA,iBACXO,EADW,mBACON,EADP,oBADM,cACvBE,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfK,EAAe,mCAAG,WAAMF,GAAN,uFACNP,EAAAA,EAAAA,IAAA,iBACXO,EADW,mBACON,EADP,2BADM,cACvBE,EADuB,yBAItBA,EAASC,MAJa,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","webpack://react-homework-template/./src/components/SearchForm/SearchBox/SearchBox.module.css?8da5","components/SearchForm/SearchBox/SearchBox.jsx","components/SearchForm/NoResults.jsx","components/SearchForm/SearchForm.jsx","pages/Movies.jsx","services/movieApi.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MoviesList_list__0Owr9\",\"itemLink\":\"MoviesList_itemLink__6tK9W\"};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport css from './MoviesList.module.css'\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul className={css.list}>\n      {movies.map(({ id, title }) => (\n        <li key={id} className={css.listItem}>\n          <Link to={`/movies/${id}`} state={{from: location}} className={css.itemLink}>{title}</Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.exact(\n    {id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,}\n  )).isRequired,\n}","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"SearchBox_input__JPoN1\",\"submitBtn\":\"SearchBox_submitBtn__CR-wT\",\"noResMess\":\"SearchBox_noResMess__+8xKa\"};","import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\nimport css from './SearchBox.module.css'\n\nexport const SearchBox = ({ onSubmitInput }) => {\n  const [inputValue, setInputValue] = useState('');\n\n  const handleChange = evt => {\n    const { value } = evt.currentTarget;\n    setInputValue(value);\n  };\n\n  const handleSubmitForm = evt => {\n    evt.preventDefault();\n    if (inputValue.trim() === '') {\n      toast.error('Please write something!', {\n        position: 'top-right',\n        autoClose: 2000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: false,\n        draggable: true,\n        progress: undefined,\n        theme: 'colored',\n      });\n      return;\n    }\n\n    onSubmitInput(inputValue);\n    setInputValue('');\n  };\n\n  return (\n    <form onSubmit={handleSubmitForm} className={css.from}>\n      <input\n        type=\"text\"\n        placeholder=\"Search films\"\n        value={inputValue}\n        autoFocus\n        onChange={handleChange}\n        autoComplete=\"off\"\n        className={css.input}\n      />\n      <button type=\"submit\" className={css.submitBtn}>Search</button>\n    </form>\n    \n  );\n};\n\nSearchBox.propTypes = {\n  onSubmitInput: PropTypes.func.isRequired,\n}","import PropTypes from 'prop-types';\nimport css from '../SearchForm/SearchBox/SearchBox.module.css'\n\nexport const NoResults = ({search}) => {\nreturn( <p className={css.noResMess}>There is no movies matching your search: '{search}'</p>)\n}\n\nNoResults.propTypes = {\n search: PropTypes.string.isRequired,\n}","import { useSearchParams} from 'react-router-dom';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { searchMovies } from '../../services/movieApi';\nimport { useState, useEffect } from 'react';\nimport { SearchBox } from './SearchBox/SearchBox';\nimport { NoResults } from './NoResults';\n\n\nexport const SearchForm = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchQuery, setSearchQuery] = useSearchParams();\n  const query = searchQuery.get('query') ?? '';\n\n\n  const handleSubmit = searchResult => {\n    setSearchQuery(searchResult !== '' ? { query: searchResult } : {});\n  };\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    try {\n      searchMovies(query).then(resp => setMovies(resp));\n    } catch (error) {\n      console.log(error);\n    }\n  }, [query]);\n\n  return (\n    <div style={{position: 'relative'}}>\n      <SearchBox onSubmitInput={handleSubmit} />\n      {movies.length !== 0 && <MoviesList movies={movies} />}\n      {movies.length === 0 && query !== '' && <NoResults search={query}/>}\n    </div>\n  );\n};\n","import { SearchForm } from 'components/SearchForm/SearchForm';\n\nconst Movies = () => {\n  return <SearchForm />;\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\nconst API_KEY = `?api_key=158ad78a017acca92c1d8a0f66634ca7`;\n\nexport const getTrending = async () => {\n  const response = await axios.get(`/trending/movie/day${API_KEY}`);\n  return response.data.results.map(({ id, title }) => {\n    return {\n      id,\n      title,\n    };\n  });\n};\n\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    `/search/movie${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data.results.map(({id, title}) => {\n    return {\n      id,\n      title,\n    }\n  });\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n"],"names":["MoviesList","movies","location","useLocation","className","css","map","id","title","to","state","from","SearchBox","onSubmitInput","useState","inputValue","setInputValue","onSubmit","evt","preventDefault","trim","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","type","placeholder","value","autoFocus","onChange","currentTarget","autoComplete","NoResults","search","SearchForm","setMovies","useSearchParams","searchQuery","setSearchQuery","query","get","useEffect","searchMovies","then","resp","error","console","log","style","searchResult","length","axios","API_KEY","getTrending","response","data","results","getMovieDetails","movieId","getMovieCredits","getMovieReviews"],"sourceRoot":""}