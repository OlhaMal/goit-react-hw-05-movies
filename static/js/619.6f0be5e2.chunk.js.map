{"version":3,"file":"static/js/619.6f0be5e2.chunk.js","mappings":"iOAEaA,EAAgB,WAC3B,OACE,4BACA,mDACA,2BACI,yBAAI,SAAC,KAAD,CAASC,GAAG,OAAZ,qBACJ,yBAAI,SAAC,KAAD,CAASA,GAAG,UAAZ,4BAIX,E,2BCVYC,EAAoB,SAAC,GAAa,IAAD,EAAXC,EAAW,EAAXA,MAE/B,OACI,4BACI,gBAAKC,IAAMD,EAAME,YAAP,yCAAsEF,EAAME,aAAvDC,EAAsEC,IAAKJ,EAAMK,eAAgBC,MAAM,SACtI,4BACI,0BAAKN,EAAMO,MAAX,IAAmBP,EAAMQ,eAAiB,gCAAQR,EAAMQ,aAAaC,UAAU,EAAG,GAAxC,WAC1C,wCAAgBC,KAAKC,MAA2B,GAArBX,EAAMY,cAAjC,QACA,sCACA,uBAAIZ,EAAMa,YACV,oCACA,wBAAI,UAAAb,EAAMc,cAAN,eAAcC,QAAS,EAAKf,EAAMc,OAAOE,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,MAAS,8CAInG,ECXYC,EAAgB,WAAO,IAAD,IACzBC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,CAAC,GAAlD,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAU9C,OARAC,EAAAA,EAAAA,YAAU,WACR,KACIC,EAAAA,EAAAA,IAAgBZ,GAASa,MAAK,SAAAC,GAAI,OAAIV,EAAgBU,EAApB,GAGrC,CAFC,MAAOC,GACLC,QAAQC,IAAIF,EACf,CACF,GAAE,CAACf,KAGF,4BACI,SAAC,KAAD,CAAMvB,GAAI8B,EAAOW,QAAjB,UACI,mBAAQC,KAAK,SAAb,wBAEJ,SAACzC,EAAD,CAAmBC,MAAOwB,MAGjC,ECXD,EAZqB,WACnB,OACE,iCACE,SAACJ,EAAD,KACA,SAACvB,EAAD,KACF,SAAC,EAAA4C,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACI,SAAC,KAAD,QAIP,C,+LCdDC,EAAAA,EAAAA,SAAAA,QAAA,+BACA,IAAMC,EAAO,4CAEAC,EAAW,mCAAG,oGACFF,EAAAA,EAAAA,IAAA,6BAAgCC,IAD9B,cACnBE,EADmB,yBAElBA,EAASC,KAAKC,QAAQjC,KAAI,YAC/B,MAAO,CACLkC,GAFgD,EAAhBA,GAGhC3C,MAHgD,EAAZA,MAKvC,KAPwB,2CAAH,qDAUX4C,EAAY,mCAAG,WAAMC,GAAN,uFACHR,EAAAA,EAAAA,IAAA,uBACLC,EADK,iCAC2BO,EAD3B,gCADG,cACpBL,EADoB,yBAInBA,EAASC,KAAKC,QAAQjC,KAAI,YAC/B,MAAO,CACLkC,GAF8C,EAAfA,GAG/B3C,MAH8C,EAAXA,MAKtC,KATyB,2CAAH,sDAYZ0B,EAAe,mCAAG,WAAMZ,GAAN,uFACNuB,EAAAA,EAAAA,IAAA,iBACXvB,GADW,OACDwB,EADC,oBADM,cACvBE,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfK,EAAe,mCAAG,WAAMhC,GAAN,uFACNuB,EAAAA,EAAAA,IAAA,iBACXvB,EADW,mBACOwB,EADP,oBADM,cACvBE,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfM,EAAe,mCAAG,WAAMjC,GAAN,uFACNuB,EAAAA,EAAAA,IAAA,iBACXvB,EADW,mBACOwB,EADP,2BADM,cACvBE,EADuB,yBAItBA,EAASC,MAJa,2CAAH,qD","sources":["components/DetailedMovie/AditionalInfo.jsx","components/DetailedMovie/DetailedMovieCard.jsx","components/DetailedMovie/DetailedMovie.jsx","pages/MovieDetails.jsx","services/movieApi.jsx"],"sourcesContent":["import { NavLink } from 'react-router-dom';\n\nexport const AditionalInfo = () => {\n  return (\n    <div>\n    <h2>Aditional information</h2>\n    <ul>\n        <li><NavLink to='cast'>Cast</NavLink></li>\n        <li><NavLink to='reviews'>Reviews</NavLink></li>\n    </ul>\n  </div>\n  )\n};\n","import defaultimage from '../../img/defaultposter.png'\n\nexport const DetailedMovieCard = ({movie}) => {\n\n    return(\n        <div>\n            <img src={!movie.poster_path ? defaultimage : `https://image.tmdb.org/t/p/w500${movie.poster_path}`} alt={movie.original_title} width='300'/>\n            <div>\n                <h1>{movie.title} {movie.release_date && (<span>({movie.release_date.substring(0, 4)})</span>)}</h1>\n                <p>User score: {Math.round(movie.vote_average * 10)}%</p>\n                <h2>Overview</h2>\n                <p>{movie.overview}</p>\n                <h2>Genres</h2>\n                <p>{movie.genres?.length > 0 ? (movie.genres.map(genre => genre.name).join(', ')) : 'There is no information about genres'}</p>\n            </div>\n        </div>\n    )\n}","import { useState, useEffect, useRef } from 'react';\nimport { useParams, useLocation, Link } from 'react-router-dom';\n// import defaultimage from '../../img/defaultposter.png'\nimport { getMovieDetails } from 'services/movieApi';\nimport { DetailedMovieCard } from './DetailedMovieCard';\n\nexport const DetailedMovie = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState({});\n\n  const location = useLocation();\n  const goBack = useRef(location.state?.from ?? '/')\n\n  useEffect(() => {\n    try {\n        getMovieDetails(movieId).then(resp => setMovieDetails(resp));\n    } catch (error) {\n        console.log(error)\n    }\n  }, [movieId]);\n\n  return (\n    <div>\n        <Link to={goBack.current}>\n            <button type='button'>Go back</button>\n        </Link>\n        <DetailedMovieCard movie={movieDetails}/>\n    </div>\n  )\n};\n","import { Loader } from './Loader';\nimport { Suspense } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { AditionalInfo } from 'components/DetailedMovie/AditionalInfo';\nimport { DetailedMovie } from 'components/DetailedMovie/DetailedMovie';\n\nconst MovieDetails = () => {\n  return (\n    <>\n      <DetailedMovie />\n      <AditionalInfo />\n    <Suspense fallback={<Loader/>}>\n        <Outlet/>\n    </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\nconst API_KEY = `?api_key=158ad78a017acca92c1d8a0f66634ca7`;\n\nexport const getTrending = async () => {\n  const response = await axios.get(`/trending/movie/day${API_KEY}`);\n  return response.data.results.map(({ id, title }) => {\n    return {\n      id,\n      title,\n    };\n  });\n};\n\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    `/search/movie${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data.results.map(({id, title}) => {\n    return {\n      id,\n      title,\n    }\n  });\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n"],"names":["AditionalInfo","to","DetailedMovieCard","movie","src","poster_path","defaultimage","alt","original_title","width","title","release_date","substring","Math","round","vote_average","overview","genres","length","map","genre","name","join","DetailedMovie","movieId","useParams","useState","movieDetails","setMovieDetails","location","useLocation","goBack","useRef","state","from","useEffect","getMovieDetails","then","resp","error","console","log","current","type","Suspense","fallback","Loader","axios","API_KEY","getTrending","response","data","results","id","searchMovies","query","getMovieCredits","getMovieReviews"],"sourceRoot":""}